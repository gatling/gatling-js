name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  id-token: write
  contents: read

defaults:
  run:
    shell: bash

jobs:
  release:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_SANDBOX_GATLING_JS }}
          aws-region: ${{ secrets.AWS_CODEARTIFACT_REGION }}

      - name: Repository
        id: repository
        env:
          GITHUB_REF: ${{ github.ref }}
        run: |
          token=$(aws codeartifact get-authorization-token --domain ${{ secrets.AWS_CODEARTIFACT_DOMAIN }} --domain-owner ${{ secrets.AWS_CODEARTIFACT_OWNER }} --query authorizationToken --output text)
          echo "::add-mask::$token"
          echo "token=$token" >> $GITHUB_OUTPUT

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'

      - name: Prepare environment
        env:
          PRIVATE_REPOSITORY_SBT: ${{ secrets.PRIVATE_REPOSITORY_SBT }}
        run: |
          mkdir --parents ~/.sbt/1.0 || true
          echo "$PRIVATE_REPOSITORY_SBT" > ~/.sbt/1.0/privateRepository.sbt

      - name: Deploy Java adapter
        id: deploy-jvm
        working-directory: ./jvm
        run: |
          sbt "project gatling-jvm-to-js-adapter" "release with-defaults"
          version="$(cat adapter/target/release-info)"
          echo "version=$version"
          echo "version=$version" >> $GITHUB_OUTPUT
          aws \
              --region ${{ secrets.AWS_CODEARTIFACT_REGION }} \
              codeartifact update-package-versions-status \
              --domain ${{ secrets.AWS_CODEARTIFACT_DOMAIN }} \
              --domain-owner ${{ secrets.AWS_CODEARTIFACT_OWNER }} \
              --repository previews \
              --format maven \
              --namespace io.gatling \
              --package gatling-jvm-to-js-adapter \
              --versions "$version" \
              --target-status Published

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Deploy JS packages
        env:
          AWS_CODEARTIFACT_DOMAIN: ${{ secrets.AWS_CODEARTIFACT_DOMAIN }}
          AWS_CODEARTIFACT_OWNER: ${{ secrets.AWS_CODEARTIFACT_OWNER }}
          AWS_CODEARTIFACT_REGION: ${{ secrets.AWS_CODEARTIFACT_REGION }}
          NODE_AUTH_TOKEN: ${{ steps.repository.outputs.token }}
        working-directory: ./js
        run: |
          npm ci
          npm version "${{ steps.deploy-jvm.outputs.version }}"
          npm run build --workspaces
          for pkg in "cli" "jvm-types" "core" "http"; do
            npm publish "--workspace=@gatling.io/$pkg"
          done
